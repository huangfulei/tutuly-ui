{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:import/recommended",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": ["react", "react-hooks", "@typescript-eslint", "prettier"],
    "rules": {
        "prefer-const": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "eqeqeq": "warn",
        "curly": "error",
        "no-console": "error",
        "quotes": ["error", "double"],
        "import/order": [
            "error",
            {
                "alphabetize": { "order": "asc", "caseInsensitive": false },
                "newlines-between": "always"
            }
        ],
        "import/no-duplicates": "error",
        "import/no-nodejs-modules": "error",
        "no-restricted-globals": [
            "error",
            {
                "name": "ComponentFramework",
                "message": "Use local parameter instead."
            }
        ],
        "no-restricted-syntax": [
            "error",
            {
                "selector": "ClassDeclaration > MemberExpression.superClass[object.type='Identifier'][object.name='React'][property.type='Identifier'][property.name='PureComponent']",
                "message": "Use React.FC instead"
            },
            {
                "selector": "ClassDeclaration > MemberExpression.superClass[object.type='Identifier'][object.name='React'][property.type='Identifier'][property.name='Component']",
                "message": "Use React.FC instead"
            },
            {
                "selector": "ClassDeclaration[superClass.name='PureComponent']",
                "message": "Use Functional Component instead"
            },
            {
                "selector": "ClassDeclaration[superClass.name='Component']",
                "message": "Use Functional Component instead"
            },
            {
                "selector": "ImportDeclaration[importKind!='type'][source.value='@microsoft/teams-js']",
                "message": "Only type imports are allowed from '@microsoft/teams-js'."
            }
        ],
        "react/forbid-component-props": [
            "error",
            {
                "forbid": ["style", "styles"]
            }
        ],
        "react/jsx-fragments": "error",
        "react/jsx-no-useless-fragment": "error",
        "react/prop-types": "off",
        "react-hooks/rules-of-hooks": "error",
        "sort-imports": ["error", { "ignoreDeclarationSort": true }],
        "react/react-in-jsx-scope": "off",
        "camelcase": "error",
        "spaced-comment": "error",
        "semi": ["error", "always"],
//        "prettier/prettier": "error",
        "no-duplicate-imports": "error",
        "no-unused-vars": "error",
        "no-trailing-spaces": "error",
        "no-unused-expressions": "error",
        "no-extra-parens": "error",
        "no-extra-semi": "error",
        "no-extra-boolean-cast": "error"
    },
    "settings": {
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true, // always try to resolve types even if project specifies not to do so
                "directory": "./src", // always resolve types relative to the current directory
                "packageMains": ["types", "main"] // resolve types as if they were in the `types` directory

            }
        }
    }
}
